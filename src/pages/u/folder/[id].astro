---
import LayoutSidebar from '@layouts/LayoutSidebar.astro';
// @ts-ignore
import Browser from '@components/item/Browser.vue';
// @ts-ignore https://github.com/withastro/language-tools/issues/476
import { url, fetchFromApi } from '@lib/helpers';
import { FolderClass } from '@lib/items/folders';

const { id } = Astro.params;

// Send a request to the API to get the folder
const authenticationHeader = Astro.locals.authHeader as string;
const folderResponse = await (
	await fetchFromApi(`folder/${id}`, {
		method: 'GET',
		headers: {
			Authorization: authenticationHeader,
		},
	})
).json();

// If the folder doesn't exist, redirect
if (!folderResponse || folderResponse?.statusCode <= 400) {
	return Astro.redirect(url('404'));
}

// If the folder isn't a valid folder, redirect
if (!FolderClass.isFolder(folderResponse)) {
	return Astro.redirect(url('404'));
}

// Otherwise, we can continue
const folder = folderResponse;

// We can safely cast this as we know that middleware would have already checked for a valid user
const user = Astro.locals.user as User;
---

<LayoutSidebar user={user}>
	<div class="h-screen">
		<Browser modelValue={folder} user={user} client:only />
	</div>
</LayoutSidebar>
